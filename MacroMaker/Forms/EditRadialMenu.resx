<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAxAAMCvAAQDfsAExD/ABMQ/wATEP8AExD/ABMQ/wATEP8AExD/ABMQ/wATEP8AExD/ABMQ/wAT
        EP8AExD/ABMQ/wATEP8AExD/ABMQ/wATEP8AExD/ABMQ/wATEP8AExD/ABMQ/wATEP8AExD/ABMQ/wAO
        DPsAAgK8AAAAMQABAbwATD//AJ6E/wCkif8ApIn/AKSJ/wCkif8ApIn/AKSJ/wCkif8ApIn/AKSJ/wCk
        if8ApIn/AKSJ/wCkif8ApIn/AKSJ/wCkif8ApIn/AKSJ/wCkif8ApIn/AKSJ/wCkif8ApIn/AKSJ/wCk
        if8ApIn/AJZ9/wBDOP8AAQG8ABAN+gCehP8Ayaj/AMam/wDGpv8Axqb/AMam/wDGpv8Axqb/AMam/wDG
        pv8Axqb/AMam/wDGpv8Axqb/AMam/wDGpv8Axqb/AMam/wDGpv8Axqb/AMam/wDGpv8Axqb/AMam/wDG
        pv8Axqb/AMam/wDGpv8Aw6P/AIx1/wAODPoAFBD/AKSJ/wDGpv8AxKT/AMSk/wDEpP8AxKT/AMSk/wDE
        pP8AxKT/AMSk/wDEpP8AxKT/AMWl/wDCo/8AxaX/AMSk/wDDo/8AxKT/AMSk/wDEpP8AxaX/AMOk/wDE
        pP8AxaX/AMSk/wDFpf8AwqL/AMam/wDBov8AkXr/ABEO/wATEP8ApIn/AMOj/wBuXP8AoIb/AMio/wB8
        aP8Af2r/AGVV/wCtkf8Av5//AGhX/wCehP8AdWL/AEE2/wCIcf8Aupz/AGZV/wCmi/8AZ1f/AKSJ/wCo
        jf8ATUD/AFZI/wCxlP8Avp//AG9d/wA/Nf8AdmP/ALye/wCRev8AEQ7/ABMQ/wCkif8Aw6P/AD40/wBx
        X/8AsJP/AEE3/wBqWf8AOzL/ADAo/wA9M/8AIh3/AH5p/wAmIP8AUUT/ADAo/wCiiP8ALif/AGNT/wAr
        JP8Aq4//AFZI/wA8Mv8AMir/AG1b/wCNdv8ALSX/AGlY/wAkHv8Aj3j/AJR8/wARDv8AExD/AKSJ/wDH
        p/8AU0X/ACYg/wApIv8AHxr/AIx1/wB1Yv8AGRX/ACYf/wBJPf8Ajnf/ADAo/wCxlP8AlHz/AKyQ/wAl
        H/8AEQ7/AEY6/wDAoP8ARTr/AHRh/wBeT/8AW0z/AKaL/wBTRf8AST3/ACYg/wCagP8Ak3v/ABEO/wAT
        EP8ApIn/AMmo/wBoV/8AAAD/AAUF/wANC/8AnoT/AKqO/wAjHf8AFxP/AIZw/wCUfP8ALyj/AKyQ/wCC
        bf8AqY7/ACYg/wBIPP8AJR//AJmA/wBHO/8Ac2D/AF1O/wBcTf8Aj3j/ACMd/wBgUP8AV0n/AKGH/wCT
        e/8AEQ7/ABMQ/wCkif8Ayaj/AHxo/wAXE/8AT0L/ABoW/wCrj/8AxKT/AEg8/wAhHP8AtZf/AKOJ/wAl
        H/8APjT/ADIp/wCliv8AJyH/AEY7/wAiHf8Am4H/AF9P/wAwKP8AKSL/AHRh/wCSev8AJR//AFZI/wAo
        Iv8Aln3/AJN7/wARDv8AExD/AKSJ/wDIp/8Ap4v/AHtn/wCskP8AdmL/ALye/wDGpv8AmYD/AIJt/wDE
        pP8AwqL/AIVw/wBWSP8Al37/AL6f/wBqWf8ATkL/AIBr/wDCov8AsJP/AGJS/wBrWf8At5n/AMKi/wCD
        bv8AVEb/AIly/wC/oP8AkXr/ABEO/wAUEP8ApIn/AMam/wDFpf8AxqX/AMWl/wDGpv8AxKT/AMSk/wDF
        pf8AxqX/AMSk/wDEpP8Ax6f/AMmo/wDJqP8Ax6f/AMin/wDGpv8Axqb/AMSk/wDFpf8Axqb/AMam/wDF
        pf8AxKT/AMam/wDGpv8Axqb/AMGi/wCRev8AEQ7/AA4M9wCagf8Ayaj/AMem/wDHpv8Ax6b/AMem/wDH
        pv8Ax6b/AMem/wDHpv8Ax6f/AMOj/wCxk/8Amn//AIxy/wCMcv8Amn//ALGT/wDDo/8Ax6f/AMem/wDH
        pv8Ax6b/AMem/wDHpv8Ax6b/AMem/wDHpv8Aw6P/AIhy/wAMCvcAAACsAD0z/gCKdP8AkXr/AJF6/wCR
        ev8AkXr/AJF6/wCRev8Aknr/AJR8/wCHb/8ATT7/BCIn/wwTL/8SEDz/EhA8/wwTMP8EISf/AE0+/wCH
        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
        AD/8AAA//gAAf/4AAH//AAD//4AB///gB/8=
</value>
  </data>
</root>